#서버가 실행되면 자동으로 로딩되는 파일
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://awseb-e-mxqdc8c8uu-stack-awsebrdsdatabase-vnt1jiyscxwr.cwrpks7ka0ox.ap-northeast-2.rds.amazonaws.com:3306/blog
    username: ebroot
    password: as3481611!
  jpa:
    show-sql: true
    hibernate: create
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true
  h2:
    console:
      enabled: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 58546496525-o06nhl8u13b3onhursfcfilm489okr7s.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook:
            client-id: 2477296099116365
            client-secret: 4ff2df008fb35e301d04cb03743b8aa5
            scope:
              - email
              - public_profile
          naver:
            client-id: yfivapFl7fe7uvF0LwWL
            client-secret: Vs9B4_hL4o
            scope:
              - email
              - public_profile
            client-name: Naver
            authorization-grant-type: authorization_code #OAuth 사용 방식 중 Authorization Code Grant Type 방식 사용 Access 토큰을 받아 사용하는 방식
            redirect-uri: http://Springboot-developer-env-1.eba-9jw9shh8.ap-northeast-2.elasticbeanstalk.com/login/oauth2/code/naver #네이버 OAuth는 redirect 주소가 고정돼있지 않기 때문에 따로 명시해줘야한다.

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response #회원정보를 json형식으로 받는데 response라는 key값으로 네이버가 리턴해준다.
jwt:
  issuer: ajufresh@gmail.com
  secret_key: study-springboot